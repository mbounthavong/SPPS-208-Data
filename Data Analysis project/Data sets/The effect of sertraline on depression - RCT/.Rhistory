summary(model5)
#### Biased model Y = b0 + b1*X1 + b2*X2 only ####
model6 <- lm(Y ~ X1 + X2, data = dat2)
summary(model6)
#### Biased model Y = b0 + b1*X1 + b3*X3 + b4*X4 only ####
model7 <- lm(Y ~ X1+ X3 + X4, data = dat2)
summary(model7)
stargazer(model4, model5, model6, model7, type = 'text', no.space = T,
star.cutoffs = c(.05, .01, .001),
keep.stat = c("n","rsq"))
###########################################################################################
#### Clear data ####
###########################################################################################
rm(list=ls())
###########################################################################################
#### Install these packages to simulate a dataset for this exercise ####
###########################################################################################
library(stargazer)   ## generates nice tables to compare models
library(gendata)     ## generates simulated data
library(lavaan)      ## create correlation matrix
library(data.table)  ## generate tables
###########################################################################################
#### Step 1: Create a data set with 4 regressors using a correlation matrix: ####
###########################################################################################
dat0 <- lav_matrix_lower2full(c(1, 0.8, 1, 0.5, 0.5, 1, 0.2, 0.4, 0.8, 1))  ## correlation matrix
dat0
# [,1] [,2] [,3] [,4]
# [1,]  1.0  0.8  0.5  0.2
# [2,]  0.8  1.0  0.5  0.4
# [3,]  0.5  0.5  1.0  0.8
# [4,]  0.2  0.4  0.8  1.0
rownames(dat0)<-colnames(dat0)<-c("var1",'var2','var3','var4')
dat1 <- genmvnorm(dat0, k = 4, n = 10000, seed = 12345)  ## Simulate a data set with N=10,000 samples
dat1
###########################################################################################
#### Visualize the correlation of the data (dat1) ####
###########################################################################################
#### Method 1:
cor(dat1)  ## simple table visual of the correlation matrix
#### Method 2:
library(corrgram)  ## package to help visualize data in correlation matrices
library(corrplot)  ## package to display correlation matrices
corrplot.mixed(corrgram(dat1), lower = "number", upper = "ellipse")
library("PerformanceAnalytics")
chart.Correlation(dat1, histogram = TRUE, pch = 19)
###########################################################################################
#### Deterine the "true" coefficient values a priori and assign the main outcome Y####
###########################################################################################
beta1 <- 2      ## Primary predictor of interest
beta2 <- 4
beta3 <- 10
beta4 <- 1.5
set.seed(12345) #add seed so the error is the same
dat1$Y <-  beta1*dat1$X1 + beta2*dat1$X2 + beta3*dat1$X3 + beta4*dat1$X4 + rnorm(1000)
#### The correct "true" model with all the variables included -- OLS ####
model1 <- lm(Y ~ X1 + X2 + X3 + X4, data = dat1)
summary(model1)
#### Biased model Y = b0 + b1*X1 only ####
model2 <- lm(Y ~ X1, data = dat1)
summary(model2)
#### Biased model Y = b0 + b1*X1 + b2*X2 only ####
model3 <- lm(Y ~ X1 + X2, data = dat1)
summary(model3)
#### Biased model Y = b0 + b1*X1 + b3*X3 + b4*X4 only ####
model4 <- lm(Y ~ X1 + X3 + X4, data = dat1)
summary(model4)
stargazer(model1, model2, model3, model4, type = 'text', no.space = T,
star.cutoffs = c(.05, .01, .001),
keep.stat = c("n", "rsq"))
###########################################################################################
#### Compare findings with a True model where the variables are uncorrelated
###########################################################################################
set.seed(12345)
X1 <- rnorm(10000)
X2 <- rnorm(10000)
X3 <- rnorm(10000)
X4 <- rnorm(10000)
#### Uncorrelated model ####
Y <- beta1*X1 + beta2*X2 + beta3*X3 + beta4*X4 + rnorm(10000)
#### Put these regressors' values into a table ####
dat2 <- data.frame(data.table(X1, X2, X3, X4))
dat2
###########################################################################################
#### Visualize the correlation of the data (dat2) ####
###########################################################################################
#### Method 1:
cor(dat2)
#### Method 2:
corrplot.mixed(corrgram(dat2), lower = "number", upper = "circle", lower.col = "black")
#### Method 3:
chart.Correlation(dat2, histogram=TRUE, pch=19)
#### The correct "true" model with all the variables included -- OLS ####
model4 <- lm(Y ~ X1 + X2 + X3 + X4, data = dat2)
summary(model4)
#### Biased model Y = b0 + b1*X1 only ####
model5 <- lm(Y ~ X1, data = dat2)
summary(model5)
#### Biased model Y = b0 + b1*X1 + b2*X2 only ####
model6 <- lm(Y ~ X1 + X2, data = dat2)
summary(model6)
#### Biased model Y = b0 + b1*X1 + b3*X3 + b4*X4 only ####
model7 <- lm(Y ~ X1+ X3 + X4, data = dat2)
summary(model7)
###########################################################################################
#### Compare the four models ####
###########################################################################################
stargazer(model4, model5, model6, model7, type = 'text', no.space = T,
star.cutoffs = c(.05, .01, .001),
keep.stat = c("n","rsq"))
68133+1241
1241/69374
69000*24
###########################################################################################
#### Clear data ####
###########################################################################################
rm(list=ls())
###########################################################################################
#### Install these packages to simulate a dataset for this exercise ####
###########################################################################################
library(stargazer)   ## generates nice tables to compare models
library(gendata)     ## generates simulated data
library(lavaan)      ## create correlation matrix
library(data.table)  ## generate tables
###########################################################################################
#### Create a data set with 4 regressors using a correlation matrix: ####
###########################################################################################
dat0 <- lav_matrix_lower2full(c(1, 0.8, 1, 0.5, 0.5, 1, 0.2, 0.4, 0.8, 1))  ## correlation matrix
dat0
# [,1] [,2] [,3] [,4]
# [1,]  1.0  0.8  0.5  0.2
# [2,]  0.8  1.0  0.5  0.4
# [3,]  0.5  0.5  1.0  0.8
# [4,]  0.2  0.4  0.8  1.0
rownames(dat0)<-colnames(dat0)<-c("var1",'var2','var3','var4')
dat1 <- genmvnorm(dat0, k = 4, n = 10000, seed = 12345)  ## Simulate a data set with N=10,000 samples
dat1
###########################################################################################
#### Visualize the correlation of the data (dat1) ####
###########################################################################################
#### Method 1:
cor(dat1)  ## simple table visual of the correlation matrix
#### Method 2:
library(corrgram)  ## package to help visualize data in correlation matrices
library(corrplot)  ## package to display correlation matrices
corrplot.mixed(corrgram(dat1), lower = "number", upper = "ellipse")
#### Method 3:
library("PerformanceAnalytics")
chart.Correlation(dat1, histogram = TRUE, pch = 19)
###########################################################################################
#### Determine the "true" coefficient values a priori and assign the main outcome Y ####
###########################################################################################
beta1 <- 2      ## Primary predictor of interest
beta2 <- 4
beta3 <- 10
beta4 <- 1.5
set.seed(12345) #add seed so the error is the same
dat1$Y <-  beta1*dat1$X1 + beta2*dat1$X2 + beta3*dat1$X3 + beta4*dat1$X4 + rnorm(1000)
#### The correct "true" model with all the variables included -- OLS ####
model1 <- lm(Y ~ X1 + X2 + X3 + X4, data = dat1)
summary(model1)
#### Biased model Y = b0 + b1*X1 only ####
model2 <- lm(Y ~ X1, data = dat1)
summary(model2)
#### Biased model Y = b0 + b1*X1 + b2*X2 only ####
model3 <- lm(Y ~ X1 + X2, data = dat1)
summary(model3)
#### Biased model Y = b0 + b1*X1 + b3*X3 + b4*X4 only ####
model4 <- lm(Y ~ X1 + X3 + X4, data = dat1)
summary(model4)
###########################################################################################
#### Compare the four models ####
###########################################################################################
stargazer(model1, model2, model3, model4, type = 'text', no.space = T,
star.cutoffs = c(.05, .01, .001),
keep.stat = c("n", "rsq"))
rm(list=ls())
library("survey")
library("MatchIt")
library("tidyverse")
library("haven")
library("dplyr")
library("cobalt")
meps.stata <- read_dta(file="C:\\Users\\mboun\\Dropbox\\Projects\\Healthcare Expenditures and Opioid users\\MEPS analysis\\Data\\combined\\adjusted_combined_data.dta")
rm(list=ls())
library("survey")
install.packages("MatchIt")
install.packages("survey")
install.packages("tidyverse")
install.packages("haven")
install.packages("cobalt")
library("survey")
library("MatchIt")
library("tidyverse")
library("haven")
library("dplyr")
library("cobalt")
meps.stata <- read_dta(file="C:\\Users\\mboun\\Dropbox\\Projects\\Healthcare Expenditures and Opioid users\\MEPS analysis\\Data\\combined\\adjusted_combined_data.dta")
meps.stata <- read_dta(file="/Users/mbounthavong/Dropbox/Projects/Healthcare Expenditures and Opioid users/MEPS analysis/Data/combined/adjusted_combined_data.dta")
meps.stata$poolwt2 <- meps.stata$poolwt / 10
t.model <- glm(narcotic ~ age + region + hispanx + marry + povcat + hibpdx +
chddx + angidx + midx + ohrtdx + strkdx + totrx
choldx + cancerdx + diabdx + arthdx + inscov + male + year +
racev1x + neweducode + poolwt2, data=meps.stata, family="binomial")
t.model <- glm(narcotic ~ age + region + hispanx + marry + povcat + hibpdx +
chddx + angidx + midx + ohrtdx + strkdx + totrx +
choldx + cancerdx + diabdx + arthdx + inscov + male + year +
racev1x + neweducode + poolwt2, data=meps.stata, family="binomial")
meps.stata
t.model <- glm(narcotic ~ age + region + hispanx + marry + povcat + hibpdx +
chddx + angidx + midx + ohrtdx + strkdx + rxtot  +
choldx + cancerdx + diabdx + arthdx + inscov + male + year +
racev1x + neweducode + poolwt2, data=meps.stata, family="binomial")
rm(list=ls())
library("survey")
library("MatchIt")
library("tidyverse")
library("haven")
library("dplyr")
library("cobalt")
# FOR Mac:
meps.stata <- read_dta(file="/Users/mbounthavong/Dropbox/Projects/Healthcare Expenditures and Opioid users/MEPS analysis/Data/combined/adjusted_combined_data.dta")
pscore <- predict(t.model, data=meps.stata, type="response")
meps.stata$poolwt2 <- meps.stata$poolwt / 10
t.model <- glm(narcotic ~ age + region + hispanx + marry + povcat + hibpdx +
chddx + angidx + midx + ohrtdx + strkdx + rxtot  +
choldx + cancerdx + diabdx + arthdx + inscov + male + year +
racev1x + neweducode + poolwt2, data=meps.stata, family="binomial")
pscore <- predict(t.model, data=meps.stata, type="response")
meps.stata$ate.wt <- ifelse(meps.stata$narcotic==1,1/pscore, 1/(1-pscore))
meps.stata$att.wt <- ifelse(meps.stata$narcotic==1, 1, pscore/(1-pscore))
tatt.design <- svydesign(
ids=~1,
strata=meps.stata$varstr,
weights=meps.stata$att.wt,    #This should be survey weight, shouldn't it? att.wt is the propensity score, no??
data=meps.stata
)
lm.t <- svyglm(totexp~ narcotic + age + region + hispanx + marry + povcat +
hibpdx + chddx + angidx + midx + ohrtdx + rxtot +
strkdx + choldx + cancerdx + diabdx + arthdx +
inscov + male + year + racev1x + neweducode, design=tatt.design)
meps.stata$comb.att <- meps.stata$att.wt*meps.stata$poolwt2
comb.att.design <- svydesign(
ids=~1,
strata=meps.stata$varstr,
weights=meps.stata$comb.att,
data=meps.stata
)
vars_to_keep <- subset(meps.stata, select=c(dupersid, narcotic, age, hispanx, marry, povcat, hibpdx, chddx, angidx, midx,
ohrtdx, strkdx, choldx, cancerdx, diabdx, arthdx, inscov, male, racev1x,
neweducode, poolwt2, varstr, totexp, year, region, obtotv, obdrv, optotv, optexp,
opdrv, ertot, ertexp, ipdis, iptexp, ipngtd, rxtot, rxexp, rxslf, varstr, varpsu,
narcfills, narcfillcat, varpsu, agecat))
aux_df <- subset(meps.stata, select=c(narcotic))
match.it <- matchit(narcotic ~ age + region + hispanx + marry + povcat +
hibpdx + chddx + angidx + midx + ohrtdx + rxtot +
strkdx + choldx + cancerdx + diabdx + arthdx +
inscov + male + year + racev1x + neweducode + poolwt2,
data=vars_to_keep,
method="nearest",
discard="both",
caliper=0.1)
a <- summary(match.it)
s.out <- summary(match.it, standardize = TRUE)
plot(s.out, var.order = "unmatched", abs = FALSE)
m.data <- match.data(match.it)
write.csv(m.data, file="/Users/mbounthavong/Dropbox/Projects/Healthcare Expenditures and Opioid users/MEPS analysis/Data/combined/matched_data.csv")
rm(list=ls())
library("survey")
library("MatchIt")
library("tidyverse")
library("haven")
library("dplyr")
library("cobalt")
meps.stata <- read_dta(file="/Users/mbounthavong/Dropbox/Projects/Healthcare Expenditures and Opioid users/MEPS analysis/Data/combined/adjusted_combined_data2.dta")
meps.stata$poolwt2 <- meps.stata$poolwt / 10
t.model <- glm(narcotic ~ age + region + hispanx + marry + povcat + hibpdx +
chddx + angidx + midx + ohrtdx + strkdx + rxtot  +
choldx + cancerdx + diabdx + arthdx + inscov + male + year +
racev1x + neweducode + poolwt2, data=meps.stata, family="binomial")
pscore <- predict(t.model, data=meps.stata, type="response")
meps.stata$ate.wt <- ifelse(meps.stata$narcotic==1,1/pscore, 1/(1-pscore))
meps.stata$att.wt <- ifelse(meps.stata$narcotic==1, 1, pscore/(1-pscore))
tatt.design <- svydesign(
ids=~1,
strata=meps.stata$varstr,
weights=meps.stata$att.wt,    #This should be survey weight, shouldn't it? att.wt is the propensity score, no??
data=meps.stata
)
lm.t <- svyglm(totexp~ narcotic + age + region + hispanx + marry + povcat +
hibpdx + chddx + angidx + midx + ohrtdx + rxtot +
strkdx + choldx + cancerdx + diabdx + arthdx +
inscov + male + year + racev1x + neweducode, design=tatt.design)
meps.stata$comb.att <- meps.stata$att.wt*meps.stata$poolwt2
comb.att.design <- svydesign(
ids=~1,
strata=meps.stata$varstr,
weights=meps.stata$comb.att,
data=meps.stata
)
vars_to_keep <- subset(meps.stata, select=c(dupersid, narcotic, age, hispanx, marry, povcat, hibpdx, chddx, angidx, midx,
ohrtdx, strkdx, choldx, cancerdx, diabdx, arthdx, inscov, male, racev1x,
neweducode, poolwt2, varstr, totexp, year, region, obtotv, obdrv, optotv, optexp,
opdrv, ertot, ertexp, ipdis, iptexp, ipngtd, rxtot, rxexp, rxslf, varstr, varpsu,
narcfills, narcfillcat, varpsu, agecat))
aux_df <- subset(meps.stata, select=c(narcotic))
match.it <- matchit(narcotic ~ age + region + hispanx + marry + povcat +
hibpdx + chddx + angidx + midx + ohrtdx + rxtot +
strkdx + choldx + cancerdx + diabdx + arthdx +
inscov + male + year + racev1x + neweducode + poolwt2,
data=vars_to_keep,
method="nearest",
discard="both",
caliper=0.1)
a <- summary(match.it)
s.out <- summary(match.it, standardize = TRUE)
plot(s.out, var.order = "unmatched", abs = FALSE)
m.data <- match.data(match.it)
write.csv(m.data, file="/Users/mbounthavong/Dropbox/Projects/Healthcare Expenditures and Opioid users/MEPS analysis/Data/combined/matched_data.csv")
rm(list = ls())
library("epitools")             ### Load the epitools package
Table1 <- matrix(c(11, 36, 518, 517), nrow = 2, ncol = 2)
Table1
riskratio.wald(Table1, rev = c("both"))
##############################################################
Table2 <- matrix(c(250, 150, 2000, 1500), nrow = 2, ncol = 2)
Table2
riskratio.wald(Table2, rev = c("both"))
oddsratio.wald(Table2, rev = c("both"))
Table3 <- matrix(c(150, 100, 1600, 400), nrow = 2, ncol = 2)
Table3
riskratio.wald(Table3, rev = c("both"))
oddsratio.wald(Table3, rev = c("both"))
# Among Drug B (N=1650)
Table4 <- matrix(c(50, 100, 800, 700), nrow = 2, ncol = 2)
Table4
riskratio.wald(Table4, rev = c("both"))
oddsratio.wald(Table4, rev = c("both"))
Table5<- matrix(c(200, 200, 2400, 1100), nrow = 2, ncol= 2)
Table5
riskratio.wald(Table5, rev = c("both"))
oddsratio.wald(Table5, rev = c("both"))
# Among those who exercise (Drug associated with Death)
Table6 <- matrix(c(150, 50, 1600, 800), nrow = 2, ncol= 2)
Table6
riskratio.wald(Table6, rev = c("both"))
oddsratio.wald(Table6, rev = c("both"))
Table7<- matrix(c(100, 100, 400, 700), nrow = 2, ncol= 2)
Table7
riskratio.wald(Table7, rev = c("both"))
rm(list = ls())
library("epitools")             ### Load the epitools package
Table1 <- matrix(c(250, 150, 2000, 1500), nrow = 2, ncol = 2)
Table1
riskratio.wald(Table1, rev="both")
oddsratio.wald(Table1, rev="both")
risk1 <- 250 / (250 + 2000)
risk2 <- 150 / (150 + 1500)
RR <- risk1 / risk2
RR
num <- 250 * 1500
denom <- 150 * 2000
OR <- num / denom
OR
Table1
15 + 9 + 39
CrossTable(diabetes.data$High.Pregnancy, diabetes.data$Outcome, chisq = TRUE, missing.include = TRUE)
library("gmodels")
CrossTable(diabetes.data$High.Pregnancy, diabetes.data$Outcome, chisq = TRUE, missing.include = TRUE)
?mtcars
?crossTable
?odd.ratio
?odds.ratio
?oddsratio
install.packages("oddsratio")
install.packages("questionr")
install.packages("questionr")
install.packages("questionr")
install.packages("questionr")
install.packages("questionr")
install.packages("epitools")
install.packages("epitools")
install.packages("epitools")
install.packages("epitools")
install.packages("lme4")
install.packages("epitools")
odd1 <- 12* 7
odd2 <- 6*7
or1 <- odd1/odd2
or
or1
0.67 / 0/50
0.67 / 0.50
12/7
6/7
1.7 / 0.86
?oddratio
?oddsratio
?oddsratio
?oddsratio()
?epitools
library(epitools)
?oddsratio
?glm
version
Table3_0 <- matrix(c(1750, 500, 850, 800), nrow = 2, ncol = 2)
Table3_0
riskratio.wald(Table3_0, rev = c("both"))
library("epitools")             ### Load the epitools package
riskratio.wald(Table3_0, rev = c("both"))
oddsratio.wald(Table3_0, rev = c("both"))
Table3_1 <- matrix(c(150, 50, 1600, 800), nrow = 2, ncol = 2)
Table3_1
riskratio.wald(Table3_1, rev = c("both"))
oddsratio.wald(Table3_1, rev = c("both"))
Table3_2 <- matrix(c(100, 100, 400, 700), nrow = 2, ncol = 2)
Table3_2
riskratio.wald(Table3_2, rev = c("both"))
oddsratio.wald(Table3_2, rev = c("both"))
??epitools
?nhor
?mhor
?cmh.test
install.packages("lawstat")
library("lawstat")
matrix.array <- array(c(Table3_1, Table3_2), dim = c(2, 2, 2))
cmh.test(matrix.array)
?cmh.test
?rma.mh
?epi.2by2
install.packages("epiR")
library("epiR")
epi.2by2(matrix.array)
cmh.test(matrix.array)
object1 <- epi.2by2(matrix.array)
print(object1)
matrix.array
dat.m03 <- matrix(c(1308,884,200,190,4325264,13142619,1530342,5586741,1,1,2,2),
nrow = 4, ncol = 3, byrow = FALSE)
colnames(dat.m03) <- c("obs","tar","grp")
dat.df03 <- data.frame(dat.m03)
dat.df03
dat.tab03 <- sapply(1:length(unique(dat.df03$grp)), function(x)
as.matrix(dat.df03[dat.df03$grp == x,1:2], ncol = 2, byrow = TRUE),
simplify = "array")
dat.tab03
epi.2by2(matrix.array)
?epi.2by2
epi.2by2(matrix.array, digits = 3)
Table3_0 <- matrix(c(1750, 500, 850, 800), nrow = 2, ncol = 2)
Table3_0
riskratio.wald(Table3_0, rev = c("both"))
oddsratio.wald(Table3_0, rev = c("both"))
install.packages("tufte")
??oddsratio.wald
#### Clear the environment
rm(list = ls())
#### Set working directory for Windows
setwd("C:\\Users\\mboun\\Dropbox\\UCSD Folder\\Courses\\SPPS 208 - Study Design & Biostats II (Winter)\\Winter 2022\\Stats Project\\Data sets\\The effect of sertraline on depression - RCT")
#### Set working directory for Mac:
setwd("/Users/mbounthavong/Dropbox/UCSD Folder/Courses/SPPS 208 - Study Design & Biostats II (Winter)/Winter 2022/Stats Project/Data sets/The effect of sertraline on depression - RCT")
#### Load the libraries
library("gmodels")
library("epitools")
library("psych")
#### Load Data from Datadryad (https://datadryad.org/stash/dataset/doi:10.5061%2Fdryad.n5tb2rbtr)
sertraline.data <- read.csv("data.csv")
sertraline.data
### How many patients in sertraline and placebo groups?
table(sertraline.data$txgroup)
table(sertraline.data$txgroup_txt)
### Cross tabulate (Visualize the data)
CrossTable(sertraline.data$study)
CrossTable(sertraline.data$study, sertraline.data$stage)
### Look at the enrolled only (status == 4)
CrossTable(sertraline.data$study[sertraline.data$status == 4], sertraline.data$stage[sertraline.data$status == 4])
### Final data is stage == 2, study == 4, status == 4
data1 <- sertraline.data[ which(sertraline.data$study == 4 & sertraline.data$stage == 2 & sertraline.data$status == 4), ]
data1
describeBy(data1, group = data1$txgroup)
data1$group <- as.numeric(data1$txgroup)
data1$group
summary(data1$age[data1$group == 1])
summary(data1$age[data1$group == 2])
t.test(data1$age ~ data1$group, var.equal = FALSE)
wilcox.test(data1$age ~ data1$group)
#### Load Data from Datadryad (https://datadryad.org/stash/dataset/doi:10.5061%2Fdryad.n5tb2rbtr)
sertraline.data <- read.csv("data.csv")
sertraline.data
View(sertraline.data)
View(sertraline.data)
table(sertraline.data$txgroup)
CrossTable(sertraline.data$study)
CrossTable(sertraline.data$study, sertraline.data$stage)
### Covert from string to numeric
data1$csf_wbc_num <- as.numeric(data1$csf_wbc_000)
### Create new variable:
data1$csf5[data1$csf_wbc_num <= 5] = 1
data1$csf5[data1$csf_wbc_num > 5] = 2
data1$csf5[is.na(data1$csf_wbc_num)] = 3
CrossTable(data1$group, data1$csf5, chisq = TRUE, missing.include = FALSE)
chisq.test(data1$group, data1$csf5, correct = FALSE)
is.na(data1$csf_wbc_num
)
?chisq.test
table(sertraline.data$txgroup)
table(sertraline.data$txgroup_txt)
CrossTable(sertraline.data$study)
CrossTable(sertraline.data$study, sertraline.data$stage)
CrossTable(sertraline.data$study[sertraline.data$status == 4], sertraline.data$stage[sertraline.data$status == 4])
data1 <- sertraline.data[ which(sertraline.data$study == 4 & sertraline.data$stage == 2 & sertraline.data$status == 4), ]
data1
CrossTable(data1$txgroup)
